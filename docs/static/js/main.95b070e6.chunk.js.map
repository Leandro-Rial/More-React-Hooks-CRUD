{"version":3,"sources":["types/types.js","context/ContextReducer.js","context/GlobalContext.js","components/Heading.js","hooks/useForm.js","components/taskForm.js","components/taskList.js","router/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["types","ContextReducer","state","action","type","tasks","payload","filter","task","id","updatedTask","updatedTasks","map","updatedDoneTasks","done","initialState","uuidv4","title","description","init","JSON","parse","localStorage","getItem","GlobalContext","createContext","ContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addTask","removeTask","editTask","toggleTaskDone","Heading","className","to","style","fontSize","useForm","useState","values","setValues","reset","handleInputChange","target","name","TaskForm","useContext","formValues","setFormValues","history","useHistory","params","useParams","taskFound","find","onSubmit","e","preventDefault","Swal","fire","push","placeholder","onChange","autoComplete","autoFocus","rows","TaskList","length","onClick","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAaA,EACA,kBADAA,EAEG,qBAFHA,EAGC,mBAHDA,EAIO,0BCFPC,EAAiB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKJ,EAED,OAAO,2BACAE,GADP,IAEIG,MAAM,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,UAGzC,KAAKL,EAED,OAAO,2BACAE,GADP,IAEIG,MAAOH,EAAMG,MAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOG,aAGzD,KAAKN,EAED,IAAMU,EAAcP,EAAOG,QAErBK,EAAeT,EAAMG,MAAMO,KAAI,SAAAJ,GACjC,OAAGA,EAAKC,KAAOC,EAAYD,GAChBC,EAGJF,KAGX,OAAO,2BACAN,GADP,IAEIG,MAAOM,IAGf,KAAKX,EAED,IAAMa,EAAmBX,EAAMG,MAAMO,KAAI,SAAAJ,GAAI,OACzCA,EAAKC,KAAON,EAAOG,QAAnB,2BAAiCE,GAAjC,IAAuCM,MAAON,EAAKM,OAAQN,KAG/D,OAAO,2BACAN,GADP,IAEIG,MAAOQ,IAInB,QACI,OAAOX,I,eC3Cba,EAAe,CACjBV,MAAO,CACH,CACII,GAAIO,cACJC,MAAO,YACPC,YAAa,mBACbJ,MAAM,GAEV,CACIL,GAAIO,cACJC,MAAO,YACPC,YAAa,uBACbJ,MAAM,KAKZK,EAAO,WACT,OACIC,KAAKC,MAAMC,aAAaC,QAAQ,WAAaR,GAIxCS,EAAgBC,wBAAcV,GAE9BW,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE9B,EAA0BC,qBAAW3B,EAAgBc,EAAcI,GAAnE,mBAAOjB,EAAP,KAAc2B,EAAd,KAEAC,qBAAU,WACNR,aAAaS,QAAQ,QAASX,KAAKY,UAAU9B,MAC9C,CAACA,IA8BJ,OACI,cAACsB,EAAcS,SAAf,CAAwBC,MAAO,CAC3B7B,MAAOH,EAAMG,MACb8B,QA/BQ,SAAC3B,GACbqB,EAAS,CACLzB,KAAMJ,EACNM,QAAQ,2BAAKE,GAAN,IAAYC,GAAIO,cAAUF,MAAM,OA6BvCsB,WAzBW,SAAC3B,GAChBoB,EAAS,CACLzB,KAAMJ,EACNM,QAASG,KAuBT4B,SAnBS,SAAC7B,GACdqB,EAAS,CACLzB,KAAMJ,EACNM,QAASE,KAiBT8B,eAbe,SAAC7B,GACpBoB,EAAS,CACLzB,KAAMJ,EACNM,QAASG,MAKb,SAOKkB,K,sBCjDEY,EArBC,WACZ,OACI,mCACI,sBAAKC,UAAU,yBAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,oBAAID,UAAU,0BAA0BE,MAAO,CAAEC,SAAU,QAA3D,wBAEJ,qBAAKH,UAAU,qCAAf,SACI,cAAC,IAAD,CAAMC,GAAG,OAAT,SACI,yBAAQD,UAAU,sGAAlB,UACI,cAAC,IAAD,IADJ,6B,QCITI,EAdC,WAAwB,IAAvB7B,EAAsB,uDAAP,GAC5B,EAA4B8B,mBAAS9B,GAArC,mBAAO+B,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACZD,EAAUhC,IAGNkC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBH,EAAU,2BAAKD,GAAN,kBAAeI,EAAOC,KAAMD,EAAOhB,UAG9C,MAAO,CAAEY,EAAQC,EAAWE,EAAmBD,I,iBCmFtCI,EA1FE,WAEf,MAAqCC,qBAAW7B,GAAxCW,EAAR,EAAQA,QAAS9B,EAAjB,EAAiBA,MAAOgC,EAAxB,EAAwBA,SAExB,EAAuDO,EAAQ,CAC7DnC,GAAI,GACJQ,MAAO,GACPC,YAAa,KAHf,mBAAOoC,EAAP,KAAmBC,EAAnB,KAAkCN,EAAlC,KAMQhC,EAAuBqC,EAAvBrC,MAAOC,EAAgBoC,EAAhBpC,YAETsC,EAAUC,cACVC,EAASC,cA8Bf,OAVA7B,qBAAU,WAER,IAAM8B,EAAYvD,EAAMwD,MAAK,SAAArD,GAAI,OAAIA,EAAKC,KAAOiD,EAAOjD,MAErDmD,GACDL,EAAcK,KAGf,CAACF,EAAOjD,GAAIJ,EAAOkD,IAGpB,qBAAKf,UAAU,2EAAf,SACE,uBAAMA,UAAU,0BAA0BsB,SA9BzB,SAACC,GAGpB,GAFAA,EAAEC,iBAEW,KAAV/C,GAAgC,KAAhBC,EACjB,OACE+C,IAAKC,KAAK,QAAS,iCAAkC,SAItDZ,EAAW7C,GACZ4B,EAASiB,GAETnB,EAAQmB,GAGVE,EAAQW,KAAK,MAeX,UACE,oBACE3B,UAAU,8BACVE,MAAO,CAAEC,SAAU,QAFrB,SAIIW,EAAW7C,GAAK,YAAc,aAGlC,qBAAK+B,UAAU,OAAf,SACE,uBACEpC,KAAK,OACLoC,UAAU,sEACV4B,YAAY,gBACZjB,KAAK,QACLjB,MAAOjB,EACPoD,SAAUpB,EACVqB,aAAa,MACbC,UAAU,SAId,qBAAK/B,UAAU,OAAf,SACE,0BACEgC,KAAK,IACLhC,UAAU,sEACV4B,YAAY,sBACZjB,KAAK,cACLjB,MAAOhB,EACPmD,SAAUpB,MAId,wBAAQT,UAAU,wDAAlB,SACIc,EAAW7C,GAAK,cAAgB,sBC5C7BgE,EArCE,WAEb,MAA8CpB,qBAAW7B,GAAjDnB,EAAR,EAAQA,MAAO+B,EAAf,EAAeA,WAAYE,EAA3B,EAA2BA,eAE7B,OACE,qBAAKE,UAAU,sBAAf,SACE,qBAAKA,UAAU,gDAAf,SACGnC,EAAMqE,OAAS,EACd,mCACGrE,EAAMO,KAAI,SAACJ,GAAD,OACT,sBAEEgC,UAAU,gFAFZ,UAIE,gCACE,6BAAKhC,EAAKS,QACV,4BAAIT,EAAKU,cAET,wBAAQsB,UAAU,mDAAmDmC,QAAS,kBAAMrC,EAAe9B,EAAKC,KAAxG,SACGD,EAAKM,KAAO,SAAW,YAG5B,gCACE,cAAC,IAAD,CAAM2B,GAAE,gBAAWjC,EAAKC,IAAM+B,UAAU,+CAAxC,kBACA,wBAAQA,UAAU,6CAA6CmC,QAAS,kBAAMvC,EAAW5B,EAAKC,KAA9F,yBAbGD,EAAKC,SAmBd,oBAAI+B,UAAU,uEAAd,2BCRGoC,EAlBG,WACd,OACI,cAAC,IAAD,UACI,qBAAKpC,UAAU,uCAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,cAAC,EAAD,IAEA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,OAAOC,UAAW3B,IACpC,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,YAAYC,UAAW3B,e,YCJlD4B,MARf,WACE,OACQ,cAAC,EAAD,UACE,cAAC,EAAD,OCGGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95b070e6.chunk.js","sourcesContent":["export const types = {\r\n    addTask: '[CRUD] add task',\r\n    removeTask: '[CRUD] remove task',\r\n    editTask: '[CRUD] edit task',\r\n    toggleDoneTask: '[CRUD] toggle done task'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const ContextReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.addTask:\r\n            \r\n            return {\r\n                ...state,\r\n                tasks: [action.payload, ...state.tasks]\r\n            }\r\n        \r\n        case types.removeTask:\r\n            \r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(task => task.id !== action.payload)\r\n            }\r\n            \r\n            case types.editTask:\r\n    \r\n                const updatedTask = action.payload;\r\n    \r\n                const updatedTasks = state.tasks.map(task => {\r\n                    if(task.id === updatedTask.id) {\r\n                        return updatedTask\r\n                    }\r\n    \r\n                    return task;\r\n                })\r\n                \r\n                return {\r\n                    ...state,\r\n                    tasks: updatedTasks\r\n                }\r\n            \r\n            case types.toggleDoneTask:\r\n    \r\n                const updatedDoneTasks = state.tasks.map(task => \r\n                    task.id === action.payload ? {...task, done: !task.done} : task\r\n                );\r\n                \r\n                return {\r\n                    ...state,\r\n                    tasks: updatedDoneTasks\r\n                }\r\n\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useEffect, useReducer } from \"react\";\r\nimport { ContextReducer } from \"./ContextReducer\";\r\nimport { types } from \"../types/types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = {\r\n    tasks: [\r\n        {\r\n            id: uuidv4(),\r\n            title: \"title one\",\r\n            description: \"some description\",\r\n            done: false,\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            title: \"title two\",\r\n            description: \"some description two\",\r\n            done: false,\r\n        },\r\n    ]\r\n}\r\n\r\nconst init = () => {\r\n    return (\r\n        JSON.parse(localStorage.getItem('tasks')) || initialState\r\n    )\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(ContextReducer, initialState, init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(state))\r\n    }, [state])\r\n\r\n    const addTask = (task) => {\r\n        dispatch({\r\n            type: types.addTask,\r\n            payload: {...task, id: uuidv4(), done: false}\r\n        })\r\n    }\r\n\r\n    const removeTask = (id) => {\r\n        dispatch({\r\n            type: types.removeTask,\r\n            payload: id\r\n        })\r\n    }\r\n    \r\n    const editTask = (task) => {\r\n        dispatch({\r\n            type: types.editTask,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    const toggleTaskDone = (id) => {\r\n        dispatch({\r\n            type: types.toggleDoneTask,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            tasks: state.tasks,\r\n            addTask,\r\n            removeTask,\r\n            editTask,\r\n            toggleTaskDone\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IoMdAdd } from 'react-icons/io'\r\n\r\nconst Heading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"flex item-center mb-10\">\r\n                <Link to=\"/\">\r\n                    <h5 className=\"text-gray-100 font-bold\" style={{ fontSize: \"2rem\" }}>Task App</h5>\r\n                </Link>\r\n                <div className=\"flex-grow text-right px-4 py-2 m-2\">\r\n                    <Link to=\"/add\">\r\n                        <button className=\"bg-green-400 hover:bg-green-500 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\r\n                            <IoMdAdd />\r\n                            &nbsp;\r\n                            Add Task\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n      setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({ ...values, [target.name]:target.value })\r\n      };\r\n\r\n      return [ values, setValues, handleInputChange, reset ]\r\n}\r\n\r\nexport default useForm","import React, { useContext, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport useForm from \"../hooks/useForm\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst TaskForm = () => {\r\n\r\n  const { addTask, tasks, editTask } = useContext(GlobalContext)\r\n\r\n  const [formValues, setFormValues, handleInputChange] = useForm({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const { title, description } = formValues;\r\n\r\n  const history = useHistory();\r\n  const params = useParams()\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(title === '' || description === '') {\r\n      return (\r\n        Swal.fire('Error', 'Please complete all the fields', 'error')\r\n      )\r\n    }\r\n\r\n    if(formValues.id) {\r\n      editTask(formValues);\r\n    } else {\r\n      addTask(formValues);\r\n    }\r\n      \r\n    history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const taskFound = tasks.find(task => task.id === params.id)\r\n\r\n    if(taskFound) {\r\n      setFormValues(taskFound)\r\n    } \r\n\r\n  }, [params.id, tasks, setFormValues])\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-3/4 animate__animated animate__fadeIn\">\r\n      <form className=\"w-6/12 bg-gray-900 p-10\" onSubmit={onSubmitForm}>\r\n        <h2\r\n          className=\"mb-10 text-center uppercase\"\r\n          style={{ fontSize: \"3rem\" }}\r\n        >\r\n          { formValues.id ? 'Edit Task' : 'Add Task' }\r\n        </h2>\r\n\r\n        <div className=\"mb-5\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"py-3 px-4 focus:outline-none focus:text-gray-100 bg-gray-700 w-full\"\r\n            placeholder=\"Write a Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n            autoFocus=\"on\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n          <textarea\r\n            rows=\"2\"\r\n            className=\"py-3 px-4 focus:outline-none focus:text-gray-100 bg-gray-700 w-full\"\r\n            placeholder=\"Write a description\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button className=\"bg-green-600 w-full hover:bg-green-500 py-2 px-4 mt-5\">\r\n          { formValues.id ? 'Update Task' : 'Create Task' }\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TaskList = () => {\r\n\r\n    const { tasks, removeTask, toggleTaskDone } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"w-9/12  animate__animated animate__fadeInDown\">\r\n        {tasks.length > 0 ? (\r\n          <>\r\n            {tasks.map((task) => (\r\n              <div\r\n                key={task.id}\r\n                className=\"w-full bg-gray-900 px-20 py-5 text-white shadow-2x1 mb-4 flex justify-between\"\r\n              >\r\n                <div>\r\n                  <h1>{task.title}</h1>\r\n                  <p>{task.description}</p>\r\n\r\n                  <button className=\"bg-purple-600 hover:bg-purple-500 py-1 px-3 mt-2\" onClick={() => toggleTaskDone(task.id)}>\r\n                    {task.done ? 'Undone' : 'done'}\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <Link to={`/edit/${task.id}`} className=\"bg-gray-600 hover:bg-gray-500 py-2 px-4 mr-2\">Edit</Link>\r\n                  <button className=\"bg-red-600 hover:bg-red-500 py-2 px-4 mr-2\" onClick={() => removeTask(task.id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : (\r\n            <h3 className=\"text-center w-full bg-gray-900 px-20 py-5 text-white shadow-2x1 mb-4\">No Users</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router, Switch, Route\r\n  } from 'react-router-dom';\r\nimport Heading from '../components/Heading';\r\nimport TaskForm from '../components/taskForm';\r\nimport TaskList from '../components/taskList';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"h-screen text-white text center p-10\">\r\n                <div className=\"container mx-auto h-full\">\r\n                    <Heading />\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={TaskList} />\r\n                        <Route exact path=\"/add\" component={TaskForm} />\r\n                        <Route exact path=\"/edit/:id\" component={TaskForm} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react';\nimport { ContextProvider } from './context/GlobalContext';\nimport AppRouter from './router/AppRouter';\nimport './tailwind.css';\nimport \"animate.css\"\n\nfunction App() {\n  return (\n          <ContextProvider>\n            <AppRouter />\n          </ContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}